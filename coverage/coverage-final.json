{"/Users/I540783/Desktop/jest-testing/src/index.ts": {"path":"/Users/I540783/Desktop/jest-testing/src/index.ts","statementMap":{"0":{"start":{"line":3,"column":4},"end":{"line":3,"column":71}},"1":{"start":{"line":3,"column":21},"end":{"line":3,"column":71}},"2":{"start":{"line":3,"column":53},"end":{"line":3,"column":71}},"3":{"start":{"line":5,"column":0},"end":{"line":5,"column":62}},"4":{"start":{"line":6,"column":0},"end":{"line":6,"column":28}},"5":{"start":{"line":7,"column":0},"end":{"line":7,"column":29}}},"fnMap":{"0":{"name":"__export","decl":{"start":{"line":2,"column":9},"end":{"line":2,"column":17}},"loc":{"start":{"line":2,"column":21},"end":{"line":4,"column":1}},"line":2}},"branchMap":{"0":{"loc":{"start":{"line":3,"column":21},"end":{"line":3,"column":71}},"type":"if","locations":[{"start":{"line":3,"column":21},"end":{"line":3,"column":71}},{"start":{"line":3,"column":21},"end":{"line":3,"column":71}}],"line":3}},"s":{"0":2,"1":2,"2":2,"3":1,"4":1,"5":1},"f":{"0":2},"b":{"0":[2,0]},"inputSourceMap":{"version":3,"file":"index.js","sourceRoot":"","sources":["index.ts"],"names":[],"mappings":";;;;;AAAA,4BAAuB;AACvB,6BAAwB","sourcesContent":["export * from \"./core\";\nexport * from \"./utils\";\n"]},"_coverageSchema":"332fd63041d2c1bcb487cc26dd0d5f7d97098a6c","hash":"23f223d24a25d495728fa6f0e834c1a87ba2895e"}
,"/Users/I540783/Desktop/jest-testing/src/core/functions.ts": {"path":"/Users/I540783/Desktop/jest-testing/src/core/functions.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":14},"end":{"line":3,"column":33}},"2":{"start":{"line":5,"column":4},"end":{"line":29,"column":5}},"3":{"start":{"line":7,"column":12},"end":{"line":7,"column":30}},"4":{"start":{"line":10,"column":12},"end":{"line":23,"column":13}},"5":{"start":{"line":12,"column":20},"end":{"line":12,"column":70}},"6":{"start":{"line":14,"column":20},"end":{"line":14,"column":70}},"7":{"start":{"line":16,"column":20},"end":{"line":16,"column":70}},"8":{"start":{"line":18,"column":20},"end":{"line":18,"column":70}},"9":{"start":{"line":31,"column":0},"end":{"line":31,"column":28}}},"fnMap":{"0":{"name":"evaluate","decl":{"start":{"line":4,"column":9},"end":{"line":4,"column":17}},"loc":{"start":{"line":4,"column":24},"end":{"line":30,"column":1}},"line":4}},"branchMap":{"0":{"loc":{"start":{"line":5,"column":4},"end":{"line":29,"column":5}},"type":"switch","locations":[{"start":{"line":6,"column":8},"end":{"line":8,"column":9}},{"start":{"line":9,"column":8},"end":{"line":24,"column":9}}],"line":5},"1":{"loc":{"start":{"line":10,"column":12},"end":{"line":23,"column":13}},"type":"switch","locations":[{"start":{"line":11,"column":16},"end":{"line":12,"column":70}},{"start":{"line":13,"column":16},"end":{"line":14,"column":70}},{"start":{"line":15,"column":16},"end":{"line":16,"column":70}},{"start":{"line":17,"column":16},"end":{"line":18,"column":70}}],"line":10}},"s":{"0":1,"1":1,"2":13,"3":9,"4":4,"5":1,"6":1,"7":1,"8":1,"9":1},"f":{"0":13},"b":{"0":[9,4],"1":[1,1,1,1]},"inputSourceMap":{"version":3,"file":"functions.js","sourceRoot":"","sources":["functions.ts"],"names":[],"mappings":";;AACA,kCAAuC;AAEvC,kBAAyB,IAAgB;IACrC,MAAM,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;QAChB,KAAK,SAAS,EAAE,CAAC;YACb,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC;QACtB,CAAC;QACD,KAAK,QAAQ,EAAE,CAAC;YACZ,MAAM,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC;gBACpB,KAAK,GAAG;oBACJ,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;gBACtD,KAAK,GAAG;oBACJ,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;gBACtD,KAAK,GAAG;oBACJ,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;gBACtD,KAAK,GAAG;oBACJ,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;gBACtD,0BAA0B;gBAC1B,SAAS,CAAC;oBACN,MAAM,CAAC,mBAAW,CAAC,4BAA4B,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC;gBACpE,CAAC;YACL,CAAC;QACL,CAAC;QACD,0BAA0B;QAC1B,SAAS,CAAC;YACN,MAAM,CAAC,mBAAW,CAAC,4BAA4B,EAAE,IAAI,CAAC,CAAC;QAC3D,CAAC;IACL,CAAC;AACL,CAAC;AA1BD,4BA0BC","sourcesContent":["import { Expression } from \"./types\";\nimport { assertNever } from \"../utils\";\n\nexport function evaluate(expr: Expression): number {\n    switch (expr.type) {\n        case \"literal\": {\n            return expr.value;\n        }\n        case \"binary\": {\n            switch (expr.operator) {\n                case \"+\":\n                    return evaluate(expr.left) + evaluate(expr.right);\n                case \"-\":\n                    return evaluate(expr.left) - evaluate(expr.right);\n                case \"*\":\n                    return evaluate(expr.left) * evaluate(expr.right);\n                case \"/\":\n                    return evaluate(expr.left) / evaluate(expr.right);\n                /* istanbul ignore next */\n                default: {\n                    return assertNever(\"Unexpected binary operator\", expr.operator);\n                }\n            }\n        }\n        /* istanbul ignore next */\n        default: {\n            return assertNever(\"Unexpected expression type\", expr);\n        }\n    }\n}\n"]},"_coverageSchema":"332fd63041d2c1bcb487cc26dd0d5f7d97098a6c","hash":"b983c3ce542777a05eb1991d180ef3a2e64be955"}
,"/Users/I540783/Desktop/jest-testing/src/core/index.ts": {"path":"/Users/I540783/Desktop/jest-testing/src/core/index.ts","statementMap":{"0":{"start":{"line":3,"column":4},"end":{"line":3,"column":71}},"1":{"start":{"line":3,"column":21},"end":{"line":3,"column":71}},"2":{"start":{"line":3,"column":53},"end":{"line":3,"column":71}},"3":{"start":{"line":5,"column":0},"end":{"line":5,"column":62}},"4":{"start":{"line":6,"column":0},"end":{"line":6,"column":29}},"5":{"start":{"line":7,"column":0},"end":{"line":7,"column":33}}},"fnMap":{"0":{"name":"__export","decl":{"start":{"line":2,"column":9},"end":{"line":2,"column":17}},"loc":{"start":{"line":2,"column":21},"end":{"line":4,"column":1}},"line":2}},"branchMap":{"0":{"loc":{"start":{"line":3,"column":21},"end":{"line":3,"column":71}},"type":"if","locations":[{"start":{"line":3,"column":21},"end":{"line":3,"column":71}},{"start":{"line":3,"column":21},"end":{"line":3,"column":71}}],"line":3}},"s":{"0":2,"1":1,"2":1,"3":1,"4":1,"5":1},"f":{"0":2},"b":{"0":[1,0]},"inputSourceMap":{"version":3,"file":"index.js","sourceRoot":"","sources":["index.ts"],"names":[],"mappings":";;;;;AAAA,6BAAwB;AACxB,iCAA4B","sourcesContent":["export * from \"./types\";\nexport * from \"./functions\";\n"]},"_coverageSchema":"332fd63041d2c1bcb487cc26dd0d5f7d97098a6c","hash":"ff47cf11f3cf7230f9d547fa37d873c9ae905416"}
,"/Users/I540783/Desktop/jest-testing/src/core/types.ts": {"path":"/Users/I540783/Desktop/jest-testing/src/core/types.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}}},"fnMap":{},"branchMap":{},"s":{"0":1},"f":{},"b":{},"inputSourceMap":{"version":3,"file":"types.js","sourceRoot":"","sources":["types.ts"],"names":[],"mappings":"","sourcesContent":["export interface Literal {\n    type: \"literal\";\n    value: number;\n}\n\nexport type BinaryOperators = \"+\" | \"-\" | \"*\" | \"/\";\nexport interface BinaryOperation {\n    type: \"binary\";\n    operator: BinaryOperators;\n    left: Expression;\n    right: Expression;\n}\n\nexport type Expression = Literal | BinaryOperation;\n"]},"_coverageSchema":"332fd63041d2c1bcb487cc26dd0d5f7d97098a6c","hash":"eb59b180ebbeea972014e31128c881abe7d89d4b"}
,"/Users/I540783/Desktop/jest-testing/src/utils/checks.ts": {"path":"/Users/I540783/Desktop/jest-testing/src/utils/checks.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":7,"column":0},"end":{"line":7,"column":34}}},"fnMap":{},"branchMap":{},"s":{"0":1,"1":1},"f":{},"b":{},"inputSourceMap":{"version":3,"file":"checks.js","sourceRoot":"","sources":["checks.ts"],"names":[],"mappings":";;AAAA,0BAA0B;AAC1B,qBAA4B,GAAW,EAAE,KAAY;IACjD,MAAM,IAAI,KAAK,CAAC,GAAG,GAAG,IAAI,GAAG,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC,CAAC;AACxD,CAAC;AAFD,kCAEC","sourcesContent":["/* istanbul ignore next */\nexport function assertNever(msg: string, value: never): never {\n    throw new Error(msg + \": \" + JSON.stringify(value));\n}\n"]},"_coverageSchema":"332fd63041d2c1bcb487cc26dd0d5f7d97098a6c","hash":"81c530bd927bb7c146e9add108d3babc3dd1d2f9"}
,"/Users/I540783/Desktop/jest-testing/src/utils/index.ts": {"path":"/Users/I540783/Desktop/jest-testing/src/utils/index.ts","statementMap":{"0":{"start":{"line":3,"column":4},"end":{"line":3,"column":71}},"1":{"start":{"line":3,"column":21},"end":{"line":3,"column":71}},"2":{"start":{"line":3,"column":53},"end":{"line":3,"column":71}},"3":{"start":{"line":5,"column":0},"end":{"line":5,"column":62}},"4":{"start":{"line":6,"column":0},"end":{"line":6,"column":30}}},"fnMap":{"0":{"name":"__export","decl":{"start":{"line":2,"column":9},"end":{"line":2,"column":17}},"loc":{"start":{"line":2,"column":21},"end":{"line":4,"column":1}},"line":2}},"branchMap":{"0":{"loc":{"start":{"line":3,"column":21},"end":{"line":3,"column":71}},"type":"if","locations":[{"start":{"line":3,"column":21},"end":{"line":3,"column":71}},{"start":{"line":3,"column":21},"end":{"line":3,"column":71}}],"line":3}},"s":{"0":1,"1":1,"2":1,"3":1,"4":1},"f":{"0":1},"b":{"0":[1,0]},"inputSourceMap":{"version":3,"file":"index.js","sourceRoot":"","sources":["index.ts"],"names":[],"mappings":";;;;;AAAA,8BAAyB","sourcesContent":["export * from \"./checks\";\n"]},"_coverageSchema":"332fd63041d2c1bcb487cc26dd0d5f7d97098a6c","hash":"96e230539f8bdd9abb8300a3227e8c6136df513a"}
}
